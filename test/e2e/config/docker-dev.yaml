---
# E2E test scenario using local dev images and manifests built from the source tree for following providers:
# - cluster-api
# - bootstrap kubeadm
# - control-plane kubeadm
# - docker

# For creating local dev images built from the source tree;
# - `make docker-build REGISTRY=gcr.io/k8s-staging-cluster-api` to build the cluster-api, bootstrap kubeadm, control-plane kubeadm provider images.
# - `make -C test/infrastructure/docker docker-build REGISTRY=gcr.io/k8s-staging-cluster-api` to build the docker provider images.

images:
# Use local dev images built source tree;
- name: gcr.io/k8s-staging-cluster-api/cluster-api-controller-amd64:dev
  loadBehavior: mustLoad
- name: gcr.io/k8s-staging-cluster-api/kubeadm-bootstrap-controller-amd64:dev
  loadBehavior: mustLoad
- name: gcr.io/k8s-staging-cluster-api/kubeadm-control-plane-controller-amd64:dev
  loadBehavior: mustLoad
- name: gcr.io/k8s-staging-cluster-api/capd-manager-amd64:dev
  loadBehavior: mustLoad
- name: quay.io/jetstack/cert-manager-cainjector:v0.11.0
  loadBehavior: tryLoad
- name: quay.io/jetstack/cert-manager-webhook:v0.11.0
  loadBehavior: tryLoad
- name: quay.io/jetstack/cert-manager-controller:v0.11.0
  loadBehavior: tryLoad
# If using Calico uncomment following lines to speed up test by pre-loading required images on nodes
# - name: calico/kube-controllers:v3.13.1
#   loadBehavior: tryLoad
# - name: calico/cni:v3.13.1
#   loadBehavior: tryLoad
# - name: calico/pod2daemon-flexvol:v3.13.1
#   loadBehavior: tryLoad
# - name: calico/node:v3.13.1
#   loadBehavior: tryLoad

providers:

- name: cluster-api
  type: CoreProvider
  versions:
  - name: v0.3.0
  # Use manifest from source files
    value: ../../../config
    replacements:
    - old: "imagePullPolicy: Always"
      new: "imagePullPolicy: IfNotPresent"
    - old: "--enable-leader-election"
      new: "--enable-leader-election=false"

- name: kubeadm
  type: BootstrapProvider
  versions:
  - name: v0.3.0
  # Use manifest from source files
    value: ../../../bootstrap/kubeadm/config
    replacements:
    - old: "imagePullPolicy: Always"
      new: "imagePullPolicy: IfNotPresent"
    - old: "--enable-leader-election"
      new: "--enable-leader-election=false"

- name: kubeadm
  type: ControlPlaneProvider
  versions:
  - name: v0.3.0
  # Use manifest from source files
    value: ../../../controlplane/kubeadm/config
    replacements:
    - old: "imagePullPolicy: Always"
      new: "imagePullPolicy: IfNotPresent"
    - old: "--enable-leader-election"
      new: "--enable-leader-election=false"

- name: docker
  type: InfrastructureProvider
  versions:
  - name: v0.3.0
  # Use manifest from source files
    value: ../../../test/infrastructure/docker/config
    replacements:
    - old: "imagePullPolicy: Always"
      new: "imagePullPolicy: IfNotPresent"
    - old: "--enable-leader-election"
      new: "--enable-leader-election=false"
  files:
  # Add a metadata for docker provider
  - sourcePath: "../data/infrastructure-docker/metadata.yaml"
  # Add a cluster template
  - sourcePath: "../data/infrastructure-docker/cluster-template.yaml"

variables:
  KUBERNETES_VERSION: "v1.18.2"
  ETCD_VERSION_UPGRADE_TO: "3.4.3-0"
  COREDNS_VERSION_UPGRADE_TO: "1.6.7"
  KUBERNETES_VERSION_UPGRADE_TO: "v1.18.2"
  KUBERNETES_VERSION_UPGRADE_FROM: "v1.17.2"
  DOCKER_SERVICE_DOMAIN: "cluster.local"
  DOCKER_SERVICE_CIDRS: "10.128.0.0/12"
  # IMPORTANT! This values should match the one used by the CNI provider
  DOCKER_POD_CIDRS: "192.168.0.0/16"
  #CNI: "./data/cni/calico/calico.yaml"
  CNI: "./data/cni/kindnet/kindnet.yaml"

intervals:
  default/wait-controllers: ["3m", "10s"]
  default/wait-cluster: ["3m", "10s"]
  default/wait-control-plane: ["3m", "10s"]
  default/wait-worker-nodes: ["3m", "10s"]
  default/wait-delete-cluster: ["3m", "10s"]
  default/wait-machine-upgrade: ["15m", "10s"]
  default/wait-machine-remediation: ["3m", "10s"]